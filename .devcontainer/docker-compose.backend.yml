volumes:
  postgres_data:
  kafka_data:
  ollama_data:
networks:
  kafka:
    name: kafka
    driver: bridge
  storage:
    name: storage
    driver: bridge
  ollama:
    name: ollama
    driver: bridge
services:
  ollama:
    image: ${OLLAMA_IMAGE}
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - ollama
    ports:
      - 11434:11434
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia # Or 'amd' for AMD GPUs
              count: all
              capabilities: [gpu]
  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: postgres
    networks:
      - storage
    environment:
      POSTGRES_DB: atomic-void
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  mongodb:
    image: ${MONGO_IMAGE}
    container_name: mongo
    networks:
      - storage
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: atomic-void-user
      MONGO_INITDB_ROOT_PASSWORD: atomic-void-password

  kafka:
    image: ${KAFKA_IMAGE}
    container_name: kafka
    ports:
      - 9092:9092
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: PLAINTEXT_HOST
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    restart: always
